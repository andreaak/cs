<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>
  <configSections>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
  <sectionGroup name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection, DotNetOpenAuth.Core">
			<section name="messaging" type="DotNetOpenAuth.Configuration.MessagingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
			<section name="reporting" type="DotNetOpenAuth.Configuration.ReportingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
		<section name="oauth" type="DotNetOpenAuth.Configuration.OAuthElement, DotNetOpenAuth.OAuth" requirePermission="false" allowLocation="true" /><section name="openid" type="DotNetOpenAuth.Configuration.OpenIdElement, DotNetOpenAuth.OpenId" requirePermission="false" allowLocation="true" /></sectionGroup></configSections>
  <appSettings>
    <add key="ValidationSettings:UnobtrusiveValidationMode" value="None" />
  </appSettings>
  <connectionStrings>
    <!--add name="Membership" connectionString="Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=|DataDirectory|\ASPNETDB.MDF;Integrated Security=True" /-->
    <add name="Membership" connectionString="Data Source=.\SQLEXPRESS2014;AttachDbFilename=|DataDirectory|\Database.mdf;Integrated Security=True" />
    <!--<add name="local" connectionString="Data Source=.\SQLEXPRESS2014;AttachDbFilename=|DataDirectory|\Database.mdf;Integrated Security=True" providerName="System.Data.SqlClient" />-->
    <add name="NorthwindConnection" connectionString="Data Source=.\SQLEXPRESS2014;AttachDbFilename=|DataDirectory|\Northwind.mdf;Integrated Security=True" providerName="System.Data.SqlClient" />
    <add name="DefaultConnection" providerName="System.Data.SqlClient" connectionString="Data Source=(LocalDb)\v11.0;Initial Catalog=aspnet-_01_ASPWebFormsTest-20170902012818;Integrated Security=SSPI;AttachDBFilename=|DataDirectory|\aspnet-_01_ASPWebFormsTest-20170902012818.mdf" />
  </connectionStrings>
  <!--
    For a description of web.config changes see http://go.microsoft.com/fwlink/?LinkId=235367.

    The following attributes can be set on the <httpRuntime> tag.
      <system.Web>
        <httpRuntime targetFramework="4.6" />
      </system.Web>
  -->
  <system.web>
    <httpRuntime targetFramework="4.5" />
    <compilation debug="true" targetFramework="4.5" />
    <membership defaultProvider="DefaultMembershipProvider">
      <!--defaultProvider="DefaultMembershipProvider"-->
      <providers>
        <!--add name="DefaultMembershipProvider" 
        type="System.Web.Providers.DefaultMembershipProvider, System.Web.Providers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" 
        connectionStringName="DefaultConnection" 
        enablePasswordRetrieval="false" 
        enablePasswordReset="true" 
        requiresQuestionAndAnswer="false" 
        requiresUniqueEmail="false" 
        maxInvalidPasswordAttempts="5" 
        minRequiredPasswordLength="6" 
        minRequiredNonalphanumericCharacters="0" 
        passwordAttemptWindow="10" 
        applicationName="/"/-->
        <!--Удаление настроек по умолчанию-->
        <remove name="DefaultMembershipProvider" />
        <remove name="AspNetSqlMembershipProvider" />
        <!--Добавление настроек для MembershipProvider для текущего приложения-->
        <add name="AspNetSqlMembershipProvider" type="System.Web.Security.SqlMembershipProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" connectionStringName="local" enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="false" applicationName="/" requiresUniqueEmail="false" passwordFormat="Hashed" maxInvalidPasswordAttempts="5" minRequiredPasswordLength="6" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" passwordStrengthRegularExpression="" />
        <!--
        connectionStringName="LocalSqlServer" - имя строки подключения для соединения с источником данных
        enablePasswordRetrieval="false" - возможность восстановить пароль
        enablePasswordReset="true" - возможность сбросить пароль
        requiresQuestionAndAnswer="false" - требуется ли ответ на вопрос для восстановления или сброса пароля
        applicationName="/" - имя приложения
        requiresUniqueEmail="false" - уникальность email адреса
        passwordFormat="Hashed" - формат хранения пароля в базе
        maxInvalidPasswordAttempts="5" - количество попыток ввести пароль, после которого пользователь будет заблокирован
        minRequiredPasswordLength="6" - минимальная длина пароля
        minRequiredNonalphanumericCharacters="0" - минимальное количество символов не цифр и не букв, которые должын пристутсвовать в пароле
        passwordAttemptWindow="10" - временное окно в течении которого будет отслеживаться количество не правильных попыток ввести пароль. Работает вместе с свойством maxInvalidPasswordAttempts
        passwordStrengthRegularExpression="" - регулярное выражение для проверки сложности пароля
        -->
        <add name="DefaultMembershipProvider" type="System.Web.Providers.DefaultMembershipProvider, System.Web.Providers, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="DefaultConnection" enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="false" requiresUniqueEmail="false" maxInvalidPasswordAttempts="5" minRequiredPasswordLength="6" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" applicationName="/" />
      </providers>
    </membership>
    <!--Для данного приложения активирована работа с ролями-->
    <roleManager enabled="true" defaultProvider="SqlRoleManager">
      <providers>
        <!--<add name="SqlRoleManager" type="System.Web.Security.SqlRoleProvider" connectionStringName="local" applicationName="/" />-->
      </providers>
    </roleManager>
    <!--roleManager defaultProvider="DefaultRoleProvider" enabled="true">
      <providers>
        <add name="DefaultRoleProvider" type="System.Web.Providers.DefaultRoleProvider, System.Web.Providers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="LocalSqlServer" applicationName="/"/>
      </providers>
    </roleManager-->
    <pages controlRenderingCompatibilityVersion="4.0">
      <controls>
        <add tagName="_03_ControlRegisterInConfig" tagPrefix="test" src="~/21_UserControls/Controls/03_ControlRegisterInConfig.ascx" />
      </controls>
    </pages>
    <caching>
      <outputCacheSettings>
        <!-- Профиль для кэширования -->
        <outputCacheProfiles>
          <!--Страница должна храниться на стороне клиента в течении 5 секунд-->
          <add name="TestProfile" duration="5" varyByParam="None" location="Client" />
        </outputCacheProfiles>
      </outputCacheSettings>
      <sqlCacheDependency>
        <databases>
          <!-- pollTime - интервал, с котором будет происходить проверка изменений в базе -->
          <add name="Database" pollTime="1000" connectionStringName="local" />
        </databases>
      </sqlCacheDependency>
    </caching>
    <authentication mode="Forms">
      <!--02_FormsAuthentication>
      <forms loginUrl="~/25_FormsAuthentication/02_Login.aspx"></forms-->
      <!--03_FormsAuthentication>
      <forms loginUrl="~/25_FormsAuthentication/03_Login.aspx"></forms-->
      <!--02_SimpleMembership-->
      <!--forms loginUrl="~/26_MembershipApi/02_SimpleMembership/Account/Login.aspx"></forms-->
      <!--forms loginUrl="~/26_MembershipApi/02_SimpleMembership/02_Login.aspx"></forms-->
      <forms loginUrl="~/26_MembershipApi/03_Role/Account/Login.aspx">
      </forms>
    </authentication>
    <profile defaultProvider="DefaultProfileProvider">
      <providers>
        <add name="DefaultProfileProvider" type="System.Web.Providers.DefaultProfileProvider, System.Web.Providers, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="DefaultConnection" applicationName="/" />
      </providers>
    </profile>
    <roleManager defaultProvider="DefaultRoleProvider">
      <providers>
        <add name="DefaultRoleProvider" type="System.Web.Providers.DefaultRoleProvider, System.Web.Providers, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="DefaultConnection" applicationName="/" />
      </providers>
    </roleManager>
    <!--
            If you are deploying to a cloud environment that has multiple web server instances,
            you should change session state mode from "InProc" to "Custom". In addition,
            change the connection string named "DefaultConnection" to connect to an instance
            of SQL Server (including SQL Azure and SQL  Compact) instead of to SQL Server Express.
      -->
    <sessionState mode="InProc" customProvider="DefaultSessionProvider">
      <providers>
        <add name="DefaultSessionProvider" type="System.Web.Providers.DefaultSessionStateProvider, System.Web.Providers, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="DefaultConnection" />
      </providers>
    </sessionState>
  </system.web>
  <system.net>
    <mailSettings>
      <!--Настройки для отправки новых паролей при работе с контролом PasswordRecovery -->
      <smtp from="petrzpua19@gmail.com">
        <network host="smtp.gmail.com" userName="petrzpua19" password="!(*)@()(" port="587" enableSsl="true" />
      </smtp>
    </mailSettings>
  <defaultProxy enabled="true" /><settings>
			<!-- This setting causes .NET to check certificate revocation lists (CRL) 
			     before trusting HTTPS certificates.  But this setting tends to not 
			     be allowed in shared hosting environments. -->
			<!--<servicePointManager checkCertificateRevocationList="true"/>-->
		</settings></system.net>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true">
      <!--add name="02_Module" type="ASPWebFormsTest._17_Modules._02_Module"/-->
      <!--add name="03_PerformanceModule" type="ASPWebFormsTest._17_Modules._03_PerformanceModule"/-->
    </modules>
    <handlers>
      <!--Регистрация класса _02_Handler как обработчика, который доступен по адресу 02_Handler.aspx-->
      <add name="02_Handler" verb="GET" path="02_Handler.aspx" type="ASPWebFormsTest._16_Handlers._02_Handler" />
      <add name="05_FileExtensionHandler" path="*.test" verb="GET" type="ASPWebFormsTest._16_Handlers._05_FileExtensionHandler" />
      <add name="06_AXDFileHandler" verb="*" path="view.axd" type="ASPWebFormsTest._16_Handlers._06_AXDFileHandler" />
    </handlers>
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.Core" publicKeyToken="2780ccd10d57b246" />
        <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.AspNet" publicKeyToken="2780ccd10d57b246" />
        <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="EntityFramework" publicKeyToken="b77a5c561934e089" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
    <!-- When targeting ASP.NET MVC 3, this assemblyBinding makes MVC 1 and 2 references relink
		     to MVC 3 so libraries such as DotNetOpenAuth that compile against MVC 1 will work with it.
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
		</assemblyBinding>
		 -->
  <!-- This prevents the Windows Event Log from frequently logging that HMAC1 is being used (when the other party needs it). --><legacyHMACWarning enabled="0" /><!-- When targeting ASP.NET MVC 3, this assemblyBinding makes MVC 1 and 2 references relink
		     to MVC 3 so libraries such as DotNetOpenAuth that compile against MVC 1 will work with it.
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
		</assemblyBinding>
		 --></runtime>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
<dotNetOpenAuth>
		<messaging>
			<untrustedWebRequest>
				<whitelistHosts>
					<!-- Uncomment to enable communication with localhost (should generally not activate in production!) -->
					<!--<add name="localhost" />-->
				</whitelistHosts>
			</untrustedWebRequest>
		</messaging>
		<!-- Allow DotNetOpenAuth to publish usage statistics to library authors to improve the library. -->
		<reporting enabled="true" />
	<!-- This is an optional configuration section where aspects of dotnetopenauth can be customized. --><!-- For a complete set of configuration options see http://www.dotnetopenauth.net/developers/code-snippets/configuration-options/ --><openid>
		<relyingParty>
				<security requireSsl="false">
					<!-- Uncomment the trustedProviders tag if your relying party should only accept positive assertions from a closed set of OpenID Providers. -->
					<!--<trustedProviders rejectAssertionsFromUntrustedProviders="true">
						<add endpoint="https://www.google.com/accounts/o8/ud" />
					</trustedProviders>-->
				</security>
				<behaviors>
					<!-- The following OPTIONAL behavior allows RPs to use SREG only, but be compatible
					     with OPs that use Attribute Exchange (in various formats). -->
					<add type="DotNetOpenAuth.OpenId.RelyingParty.Behaviors.AXFetchAsSregTransform, DotNetOpenAuth.OpenId.RelyingParty" />
				</behaviors>
			</relyingParty></openid></dotNetOpenAuth><uri>
		<!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
		     which is necessary for OpenID urls with unicode characters in the domain/host name.
		     It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
		<idn enabled="All" />
		<iriParsing enabled="true" />
	</uri></configuration>