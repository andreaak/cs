<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="01_BaseInfo.aspx.cs"
    Inherits="ASPWebFormsTest._03_StateSaving._01_BaseInfo" %>

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title></title>
    <link href="~/Content/My.css" rel="stylesheet" />
</head>
<body>
    <p>
        HTTP - протокол, который не поддерживает хранения состояния.<br />
        В веб приложениях хранение состояния можно организовать на:
   
    </p>
    <ul>
        <li>
            <div><strong>На стороне пользователя</strong></div>
            <div class="image">
                <img src="01_BaseInfo_state_user.png" />
            </div>
        </li>
        <li>
            <div><strong>На стороне сервера</strong></div>
            <div class="image">
                <img src="01_BaseInfo_state_server.png" />
            </div>
        </li>
    </ul>

    <p>Преимущества использования хранения состояния на стороне клиента:</p>
    <ol>
        <li>Масштабируемость.</li>
        <li>Поддержка приложений работающих на нескольких серверах.</li>
    </ol>
    <p>Преимущества хранения данных на сервере:</p>
    <ol>
        <li>Лучшая безопасность по сравнению с клиентским хранилищем.</li>
        <li>Меньшее количество трафика.</li>
    </ol>

    <p>Способы хранения состояния:</p>
    <ol>
        <li>Состояние вида. (ViewState)</li>
        <li>Хранение состояния в адресной строке.(URL)</li>
        <li>Cookie-файлы.(Cookies)</li>
        <li>Сессия. (Session)</li>
        <li>Состояние приложения. (Application)</li>
    </ol>

    <h2>Сравнение опций для управления состояния</h2>
    <table>
        <tr>
            <th></th>
            <th>ViewState</th>
            <th>Строка запроса</th>
            <th>Cookie-наборы</th>
            <th>Session</th>
            <th>Application</th>
        </tr>
        <tr>
            <td>Допустимые типы данных</td>
            <td>Все, которые поддерживают сериализацию</td>
            <td>Строковые типы</td>
            <td>Строковые типы</td>
            <td>Все типы данных .NET</td>
            <td>Все типы данных.NET</td>
        </tr>
        <tr>
            <td>Место хранения</td>
            <td>Поле в текущей странице</td>
            <td>Строка URL адреса</td>
            <td>Компьютер клиента</td>
            <td>В памяти сервера</td>
            <td>В памяти сервера</td>
        </tr>
        <tr>
            <td>Время жизни</td>
            <td>Хранится постоянно для отсылки данных на одну страницу</td>
            <td>Утрачивается, когда пользователь вводит новый URL адрес</td>
            <td>Определяется разработчиком. Может сохранятся на долго и использоваться между несколькими сеансами</td>
            <td>Как правило время жизни длится 20 минут. Но может быть изменено программно или глобально</td>
            <td>Совпадаетсо временем жизни приложения</td>
        </tr>
        <tr>
            <td>Контекст</td>
            <td>Только текущая страница</td>
            <td>Целевая страница</td>
            <td>Все приложение</td>
            <td>Все приложение</td>
            <td>Все приложение. Значения глобальные для всех пользователей</td>
        </tr>
        <tr>
            <td>Безопасность</td>
            <td>По умолчанию является не защищенным. Но можно включить шифрование</td>
            <td>Доступна для просмотра и легко может быть изменена пользователем</td>
            <td>Не защищены и могут быть изменены пользователем</td>
            <td>Безопасная, так как данные не передаются клиенту. Однако подвержена атаке перехвата сеанса</td>
            <td>Самый безопасный способ хранения состояния, так как данные никогда не передаются клиенту</td>
        </tr>
        <tr>
            <td>Сложности, влияющие на производительность</td>
            <td>Большой объем информации влияет на скорость передачи страницы, но не затрагивает производительность сервера</td>
            <td>Нет</td>
            <td>Нет</td>
            <td>Большое количество информации может значительно замедлить работу сервера</td>
            <td>Большое количество информации может значительно замедлить работу сервера</td>
        </tr>
        <tr>
            <td>Пример применения</td>
            <td>Хранение параметров конкретной страницы</td>
            <td>Отправка номера продукта со страницы каталога на страницу описания</td>
            <td>Персонализация пользователей. Авторизация запросов клиента.</td>
            <td>Хранения элементов в корзине для покупок</td>
            <td>Любые глобальные данные</td>
        </tr>
    </table>
</body>
</html>
