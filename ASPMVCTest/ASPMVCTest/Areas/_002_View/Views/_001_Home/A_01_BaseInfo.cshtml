@model IEnumerable<_01_ASPMVCTest.Areas._002_View.Models.Product>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>BaseInfo</title>
    <link href="~/Content/My.css" rel="stylesheet" />
</head>
<body>
    <p>
        Все операторы Razor начинаются с символа '@@'
    </p>
    <p>
        Данное представление строго типизированное.<br />
        Строка @@model IEnumerable&lt;_01_ASPMVCTest.Models.View.Product&gt;
        указывает на тип объекта модели.<br />
        Модель, переданная в контроллере в качестве параметра метода View,
        может быть использована по ссылке @@Model
    </p>
    <p>
        Префикс строки @@: указывает что строку нужно обработать так,
        как если она будет HTML разметкой
    </p>

    <h4>
        Блок кода:
    </h4>
    <p class="code">
        @@{<br />
        &nbsp;&nbsp;int a = 123;<br />
        &nbsp;&nbsp;string message = "<b>Hello world</b>";<br />
        }
    </p>

    <!--Блок кода---------------------------------------->
    @{
        int a = 123;
        string message = "<b>Hello world</b>";
    }

    <h4>
        Выражение (HTML encoded):
    </h4>
    <p class="code">
        @@message
    </p>

    <p>@message</p>

    <h4>Unencoded:</h4>
    <p class="code">
        @@Html.Raw(message)
    </p>

    <p>@Html.Raw(message)</p>

    <h4>
        Комбинирование кода и разметки:
    </h4>
    <p class="code">
        @@{<br />
        &nbsp;&nbsp;string[] items = { "Item 1", "Item 2", "Item 3" };<br />
        }<br />
        <br />
        @@{<br />
        &nbsp;&nbsp;foreach (string item in items)<br />
        &nbsp;&nbsp;{<br />
        &nbsp;&nbsp;&nbsp;&nbsp;&lt;span&gt;@@item&lt;/span&gt;<br />
        &nbsp;&nbsp;}<br />
        }
    </p>

    @{
        string[] items = { "Item 1", "Item 2", "Item 3" };
    }

    @{
        foreach (string item in items)
        {
            <span>@item</span>
        }
    }
    <br/>

    <!--Комбинирование кода и текста--------------------->
    @{
        bool foo = true;
    }

    @if (foo)
    {
        <span>Hello world</span>
    }

    <br />
    <!--Комбинирование кода и текста (Вариант 2)--------->
    @if (foo)
    {
        @:Hello world
    }

    <br />
    <!--Email адреса в разметке-------------------------->
    admin@example.com
    <br />


    <!--Использование символа at------------------------->
    <p>Для получения доступа к значению переменной foo мы используем код @@foo</p>

    <!--------------------------------------------------->
    @*
        Серверный
        многострочный
        комментарий
    *@


    @foreach (var item in Model)
    {
        @*Чтение свойства элемента модели*@
        <h3>Имя продукта: @item.Name</h3>

        if (item.Category == "Канцтовары")
        {
            @*Razor понимает, что оператор в теле if начинается с HTML дескриптора,
                и поэтому относится к нему как к разметке, которую нужно генерировать*@
            <p>На канцтовары действует <b>скидка 10%</b></p>
        }

        if (item.Price < 5)
        {
            @:стоимость доставки 10 грн.
        }
        <hr />
    }
</body>
</html>
