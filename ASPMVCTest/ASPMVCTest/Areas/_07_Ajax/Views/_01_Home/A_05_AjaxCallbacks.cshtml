@{
    ViewBag.Title = "Orders";

    /*
    С помощью следующих свойств можно указать JavaScript функции, которые будут запускаться по мере выполнения запросов.
    OnBegin - начало асинхронного запроса на сервер.
    OnSuccess - успешное завершение обработки запроса на сервере.
    OnFailure - функция запустится в случае возникновения ошибки.
    OnComplete - функция запускается по завершению асинхронного запроса не зависимо от резальтата.     
     */

    var options = new AjaxOptions()
    {
        UpdateTargetId = "tabledata",
        Url = Url.Action("A_02_SimpleAjaxData"),
        LoadingElementId = "loadingIndicator",

        OnBegin = "OnBeginJs",
        OnSuccess = "OnSuccessJs",
        OnFailure = "OnFailureJs",
        OnComplete = "OnCompleteJs",
    };
}

<h2>Orders</h2>

@using (Ajax.BeginForm(options))
{
    <div id="loadingIndicator" style="display:none;">Loading...</div>
    <table cellpadding="4">
        <thead>
            <tr>
                <th>Id</th>
                <th>Product</th>
                <th>Quantity</th>
                <th>Customer</th>
            </tr>
        </thead>

        <tbody id="tabledata">
            @Html.Action("A_02_SimpleAjaxData", new { id = Model })
        </tbody>

    </table>
    <p>
        @*
            При отправке обратного запроса на сервер, в форме будет содержаться поле id 
            которое методом действия будет использоваться для фильтрации данных
         *@
        @Html.DropDownList("id", new SelectList(new[] { "All", "Ivanov", "Petrov", "Fedorov" }, (Model ?? "All")))
        <input type="submit" value="Submit" />
    </p>
}

@*Ajax.ActionLink - создание ссылки, клик по которой, будет обрабатываться кодом библиотеки jquery.unobtrusive-ajax*@

@foreach (string str in new[] { "All", "Ivanov", "Petrov", "Fedorov" })
{
    <div style="margin-right: 5px; float: left;">
        @Ajax.ActionLink(str, "OrdersData", new { id = str },
            new AjaxOptions
            {
                UpdateTargetId = "tabledata",
                LoadingElementId = "loadingIndicator"
            })
    </div>
}

<br />
@*При нажатии на ссылку сервер вернет ответ 404*@
@Ajax.ActionLink("ErrorLink", "A_02_SimpleAjaxDataError",
    new AjaxOptions()
    {
        OnBegin = "OnBeginJs",
        OnSuccess = "OnSuccessJs",
        OnFailure = "OnFailureJs",
        OnComplete = "OnCompleteJs",
    })

@section scripts
{
    @*Ненавязивый JavaScript для выполнения запроса на сервер без полного обновления страницы*@
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>

    <script type="text/javascript">
        function OnBeginJs() {
            alert("OnBegin Callback");
        }

        function OnSuccessJs(data) {
            alert("OnSuccess Callback: " + data);
        }

        function OnFailureJs(request, error) {
            alert("OnFailure Callback: " + error);
        }

        function OnCompleteJs(request, status) {
            alert("OnComplete Callback: " + status);
        }
    </script>
}

