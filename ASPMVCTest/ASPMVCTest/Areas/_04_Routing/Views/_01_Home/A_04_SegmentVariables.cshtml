@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
</head>
<body>
    <h4>Чтение переменных из RouteData.Values</h4>
    <p>
        RouteData.Values - коллекция значений сегментов,
        доступных в момент обработки текущего запроса<br />
        ViewBag - динамический словарь,
        который позволяет передавать данные в представление
    </p>
    <h4>Чтение переменных из параметров Action</h4>
    <p>
        MVC Framework будет пытаться преобразовать значение, полученное из запроса,
        в тип указанный в параметрах действия.<br />
        Значения сегментов с именами x и y автоматически будут присвоены
        параметрам метода _04_ActionWithParameters с теми же именами.<br />
        В случае, если значения, которые были получены из сегментов,
        не могут быть приведены к типу int, параметрам будет присвоено значение null,
        так как тип параметров int?.<br />
        В случае использования типа int произойдёт ошибка этапа выполнения.
    </p>
    <br />
    <br />
    <div>
        @* @ViewBag.Variable вывод значение свойства из динамической коллекции*@
        <h2>Route: @ViewBag.Route</h2>
        <h2>Variable: @ViewBag.Message</h2>

        <h4>Use Action Without Parameters</h4>

        <p>
            Url.RouteUrl =
            @Url.RouteUrl("_04_Routing_Variables", new { action = "_04_ActionWithoutParameters", controller = "_01_Home", x = "123", y = "456" })
        </p>

        <a href="@Url.RouteUrl("_04_Routing_Variables", new { action = "_04_ActionWithoutParameters", controller = "_01_Home", x = "123", y = "456" })">
            /_04_ActionWithoutParameters/123/456</a>
        <br />
        <a href="@Url.RouteUrl("_04_Routing_Variables", new { action = "_04_ActionWithoutParameters", controller = "_01_Home", x = "123"})">
            /_04_ActionWithoutParameters/123</a>
        <br />
        <br />

        <a href="~/_04_Routing/_01_Home/_04_ActionWithoutParameters">/_01_Home/_04_ActionWithoutParameters</a><br />
        <a href="~/_04_Routing/_01_Home/_04_ActionWithoutParameters/123">/_01_Home/_04_ActionWithoutParameters/123</a><br />
        <a href="~/_04_Routing/_01_Home/_04_ActionWithoutParameters/123/456">/_01_Home/_04_ActionWithoutParameters/123/456</a><br />
        <a href="~/_04_Routing/_01_Home/_04_ActionWithoutParameters/123/BBB">/_01_Home/_04_ActionWithoutParameters/123/BBB</a><br /><br />

        <h4>Use Action With Parameters</h4>

        <a href="@Url.RouteUrl("_04_Routing_Variables", new
             {
                 action = "_04_ActionWithParameters",
                 controller = "_01_Home",
                 x = "789", y = "BBB"
             })">/_04_ActionWithParameters/789/BBB</a><br />
        <br />

        <a href="~/_04_Routing/_01_Home/_04_ActionWithParameters">/_01_Home/_04_ActionWithParameters</a><br />

        <a href="~/_04_Routing/_01_Home/_04_ActionWithParameters/123">/_01_Home/_04_ActionWithParameters/123</a><br />

        <a href="~/_04_Routing/_01_Home/_04_ActionWithParameters/123/456">/_01_Home/_04_ActionWithParameters/123/456</a><br />

        <a href="~/_04_Routing/_01_Home/_04_ActionWithParameters/123/BBB">/_01_Home/_04_ActionWithParameters/123/BBB</a><br />
    </div>
</body>
</html>
