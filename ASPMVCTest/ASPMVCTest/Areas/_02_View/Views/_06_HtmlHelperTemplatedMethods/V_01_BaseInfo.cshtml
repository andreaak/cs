@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>V_01_BaseInfo</title>
    <link href="~/Content/My.css" rel="stylesheet"/>
</head>
<body>
    <p>
        Шаблонизированный вспомогательный метод -
        обеспечивает большую гибкость при создании представления,
        позволяя автоматизировать выбор HTML элемента
        для редактирования определенного свойства модели.
    </p>
    <ul>
        <li>@@Html.EditorFor(model = &gt; model.Property)</li>
        <li>@@Html.DisplayFor(model = &gt; model.Property)</li>
        <li>@@Html.LabelFor(model = &gt; model.Property)</li>
        <li>@@Html.EditorForModel()</li>
        <li>@@Html.DisplayForModel()</li>
    </ul>

    <p>
        LabelFor - визуализирует элемент label соотвествующий
        определенному свойству модели.
    </p>
    <p>
        EditorFor - визуализирует редактор
        для изменения определенного свойства модели.
    </p>
    <p>
        DisplayFor - визуализирует представление только для чтения,
        определенного свойства модели.
    </p>
    <p>
        С помощью атрибутов, добавленных свойствам модели, можно управлять поведением шаблонизированных методов.
    </p>
    <h4>Аттрибуты свойств модели</h4>
    <ul>
        <li>HiddenInput - атрибут указывает, что свойство модели должно отображаться как скрытое поле (&lt;input type=&ldquo;hidden&rdquo;&gt;)</li>
        <li>ScaffoldColumn - свойство декорированное данным атрибутом не отображается при использовании шаблонизированных методов</li>
        <li>Display - задает значение элемента label при использовании метода LabelFor</li>
        <li>DataType - задает формат отображения значения свойства</li>
        <li>UIHint - определяет, какой шаблон разметки необходимо использовать для определенного свойства.</li>
    </ul>
    <h4>Системные значения для атрибута UIHint</h4>
    <ul>
        <li>Boolean - флажок или флажок с атрибутом disabled</li>
        <li>Collection - подходящий контрол для каждого элемента коллекции</li>
        <li>Decimal - поле ввода со значением в формате с отображением двух десятичных позиций</li>
        <li>EmailAddress - поле ввода или ссылка с href = mailto</li>
        <li>HiddenInput - скрытое поле</li>
        <li>Html - поле ввода или ссылка &lt;a&gt;</li>
        <li>MultilineText - многострочное поле ввода</li>
        <li>Object - подходящий элемент для каждого свойства объекта</li>
        <li>Password - поле ввода для пароля</li>
        <li>String - поле ввода</li>
        <li>Url - поле ввода или ссылка &lt;a&gt;</li>
    </ul>
    <p>
        С помощью атрибута UIHint можно указать специальный шаблон,
        разработанный отдельно.
    </p>
    <p>
        <strong>Специальный шаблон</strong> - это частичное представление,
        которое размещено в директории
        Shared/EditorTemplates (если шаблон предназначен для EditorFor метода)
        или Shared/DisplayTemplaes (если шаблон предназначен для DisplayFor метода)
        и используется при работе с шаблонизированными вспомогательными методами.
    </p>
    <img src="~/Content/Images/special_template.png" />

    <h4>Процесс поиска шаблона:</h4>
    <ol>
        <li>
            Шаблон, переданный шаблонизированному методу, например,
            Html.EditorFor(m =&gt; m.Prop, &ldquo;Template&rdquo;)
        </li>
        <li>Шаблон указанный атрибутом UIHint в моделе.</li>
        <li>Шаблон соответствующий имени класса .NET обрабатываемого типа данных.</li>
        <li>
            Если обрабатываемый тип данных является простым,
            используется встроенный шаблон для типа String.
        </li>
        <li>Любой шаблон, который соответствует базовым классам типа данных.</li>
        <li>
            Если тип данных реализует IEnumerable,
            будет использоваться встроенный шаблон Collection.
        </li>
        <li>
            Если все проверки завершились неудачно,
            будет использоваться шаблон Object -
            данный шаблон просматривает каждое свойство объекта модели
            и выбирает шаблон, наиболее подходящий для типа свойства.
        </li>
    </ol>
</body>
</html>
