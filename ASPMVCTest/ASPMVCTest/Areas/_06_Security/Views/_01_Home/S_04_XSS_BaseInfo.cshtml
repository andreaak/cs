@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>V_01_BaseInfo</title>
    <link href="~/Content/My.css" rel="stylesheet" />
</head>
<body>
    <p>
        Данные при использовании HTTP протокола передаются в текстовом виде, соответственно перехватив значения,
        отправляемые на сервер, можно легко изменить и нарушить работу серверного приложения.
    </p>
    <p>Любые входящие данные могут быть поддельными:</p>
    <ul>
        <li>Входящие URL адреса</li>
        <li>Данные принятые из формы</li>
        <li>Cookie-наборы</li>
        <li>Данные в HTTP заголовках</li>
    </ul>
    <p>
        Любой клиент может отправить на сервер совершенно произвольный набор заголовков и значений cookie-наборов.
        Инструменты для работы с HTTP запросами и ответами:
    </p>
    <ul>
        <li>Fiddler</li>
        <li>Firebug</li>
        <li>Web Developer Toolbar</li>
        <li>Встроенные средства разработчика Internet Explorer и Google Chrome</li>
    </ul>
    <p>
        При получении важных данных со стороны пользователя нужно убедится в том, что данные были отправлены приложением,
        а не подменены, для этого можно использовать шифрование или добавлять к данным специальную подпись, которую будет проверять сервер.
    </p>

    <h4>Cross-Site Scripting (XSS)</h4>
    <p>
        <strong>Межсайтовый сценарий</strong>  - одна из наиболее известных и широко используемых уязвимостей.
        Если взломщик может заставить сервер возвращать посетителям произвольный JavaScript сценарий,
        то такой сценарий может управлять сеансами браузеров этих посетителей.
    </p>
    <p>
        Взломщик может:
    </p>
    <ul>
        <li>Поменять дизайн сайта, вывести на нем дополнительный контент</li>
        <li>Перенаправить пользователя на другой сайт</li>
        <li>Собирать конфиденциальные данные (идентификаторы сеанса из cookie наборов)</li>
    </ul>

    <h4>Разновидности XSS</h4>
    <ul>
        <li>
            <strong>Постоянные XSS</strong> - в интерактивный элемент (доску объявлений, сообщение) вносится контент,
            который будет сохранен в базу, а потом выдан другим пользователям.
        </li>
        <li>
            <strong>Непостоянные или пассивные XSS</strong> - отправка вредоносных данных в ответ на запрос нашего приложения.
            Взломщику нужно заставить жертву отправить такой запрос со своего браузера.
        </li>
    </ul>
    <p>
        Microsoft Web Protection Library - набор .NET библиотек для защиты веб приложений.
    </p>
    <p>
        В контроллере метод Create помечен атрибутом <span class="code">[ValidateInput(false)]</span>.<br />
        Данный атрибут отключает валидацию данных для запросов к методу Create. <br />
        Это означает что метод может получать потенциально опасные значения в виде HTML разметки или JavaScript кода.<br />
        Попробуйте при создании нового объявления добавить в поле ввода следующий текст<br />
        <span class="code">&lt;b&gt;@@Html.Raw(Server.HtmlEncode("&lt;script&gt;alert(document.cookie)&lt;/script&gt;"))</span>
    </p>
    <p>
        Проверка данных с помощью библиотеки AntiXSS.
        Для установки библиотеки через Package Manager Console используется команда Install-Package AntiXSS
    </p>
    <p class="code">
        bulletinboarditem.Title = Sanitizer.GetSafeHtmlFragment(bulletinboarditem.Title);<br />
        bulletinboarditem.Message = Sanitizer.GetSafeHtmlFragment(bulletinboarditem.Message);
    </p>


</body>
</html>
