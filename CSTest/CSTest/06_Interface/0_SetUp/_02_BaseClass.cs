using System.Diagnostics;

namespace CSTest._06_Interface._0_Setup
{
    /*
    Компилятор C# требует, чтобы метод, реализующий интерфейс, отмечался 
    модификатором public. CLR требует, чтобы интерфейсные методы были виртуальными. 
    Если метод явно не определен в коде как виртуальный, компилятор сделает 
    его таковым и, вдобавок, запечатанным. Это не позволяет производному классу 
    переопределять интерфейсные методы. Если явно задать метод как виртуальный, 
    компилятор сделает его таковым и оставит незапечатанным, что предоставит 
    производному классу возможность переопределять интерфейсные методы.
    Производный класс не в состоянии переопределять интерфейсные методы, 
    объявленные запечатанными, но может повторно унаследовать тот же интерфейс 
    и предоставить собственную реализацию его методов. При вызове интерфейсного 
    метода объекта вызывается реализация, связанная с типом самого объекта.
    */

    class _02_BaseClass : _02_IVirtualNonVirtual, _021_IVirtualNonVirtual
    {
        public int field1;

        public _02_BaseClass()
        {
            field1 = 3;
        }

        public void Method()
        {
            Debug.WriteLine("_02_BaseClass.Method");
        }

        // Этот метод неявно запечатан и его нельзя переопределить
        public void MethodNew()
        {
            Debug.WriteLine("_02_BaseClass.MethodNew");
        }

        public virtual void MethodVirtual()
        {
            Debug.WriteLine("_02_BaseClass.MethodVirtual");
        }
    }
}
