//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CSTest._21_Database._02_EntityFramework._01_DatabaseFirst
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ShopDBEntities : DbContext
    {
        public ShopDBEntities()
            : base("name=ShopDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Assets> Assets { get; set; }
        public DbSet<CUSTOMERS> CUSTOMERS { get; set; }
        public DbSet<Customers2> Customers2 { get; set; }
        public DbSet<Employees> Employees { get; set; }
        public DbSet<OFFICES> OFFICES { get; set; }
        public DbSet<ORDERS> ORDERS { get; set; }
        public DbSet<Orders2> Orders2 { get; set; }
        public DbSet<PRODUCTS> PRODUCTS { get; set; }
        public DbSet<Salespeople> Salespeople { get; set; }
        public DbSet<SALESREPS> SALESREPS { get; set; }
    
        [EdmFunction("ShopDBEntities", "sfCustomerInfoById")]
        public virtual IQueryable<sfCustomerInfoById_Result> sfCustomerInfoById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<sfCustomerInfoById_Result>("[ShopDBEntities].[sfCustomerInfoById](@Id)", idParameter);
        }
    
        public virtual int spCustomerById(Nullable<int> id, ObjectParameter company, ObjectParameter limit)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCustomerById", idParameter, company, limit);
        }
    
        public virtual ObjectResult<spCustomerByName_Result> spCustomerByName(string company)
        {
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCustomerByName_Result>("spCustomerByName", companyParameter);
        }
    
        public virtual ObjectResult<spCustomerByName2_Result> spCustomerByName2(string company)
        {
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCustomerByName2_Result>("spCustomerByName2", companyParameter);
        }
    }
}
