<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>Заимствование конструктора</title>

    <script>

        // родительский конструктор
        function Parent(name) {
            this.name = name;
            this.colors = ["red", "blue", "green"];
            this.test = function() {
                return this.name;
            }
        }

        // дополнительное поведение добавленное в прототип.
        Parent.prototype.say = function () {
            return this.name;
        }

        // дочерний конструктор.
        function Child(name) {
            /*
            Вызов конструктора Parent с передачей ссылки на пустой объект, 
            который должна заполнить данная функция конструктор.
            По сути в этом конструкторе копируются все свойства из объекта Parent в объект Child.
            */
            Parent.apply(this, arguments);
        }

        var childInstance = new Child("Ivan");
        write(childInstance.test());//Ivan
        childInstance.colors.push("black");
        write(childInstance.colors);//red,blue,green,black

        var childInstance2 = new Child("Ivan");
        write(childInstance2.colors);//red,blue,green

        /*
        Недостатки шаблона:
        Не наследуются свойства и методы прототипа родителя, 
        вызвать метод say на объекте childInstance сейчас не возможно.
        */
        write(childInstance.say);//undefined

        function write(result) {
            document.write(result + "<br/>");
        }
    </script>
</head>
<body>
</body>
</html>
