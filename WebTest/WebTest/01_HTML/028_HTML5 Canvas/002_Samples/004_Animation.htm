<!DOCTYPE HTML>
<html>
<head>
    <title>Анимация Canvas</title>

    <style>
        body {
            margin: 0px;
            padding: 0px;
        }

        canvas {
            border: 1px solid #ccc;
        }
    </style>

</head>
<body>
    <canvas id="myCanvas" width="578" height="200"></canvas>
    <script>

        // https://developer.mozilla.org/en-US/docs/Web/API/window.requestAnimationFrame
        // requestAnimationFrame - метод, который указывает браузеру что наш код хочет выполнить анимацию 
        // и запрашивает вызов callback функции перед следующей перерисовкой.
        window.requestFrame = function (callback) {
            // переменная f будет содержать ту функцию, для запроса отрисовки одного кадра, которую поддерживает текущий браузер.
            var f = window.mozRequestAnimationFrame ||
                window.requestAnimationFrame ||
                window.webkitRequestAnimationFrame ||
                function (callback) {
                    window.setTimeout(callback, 500);
                }
            
            f(callback);
        };

        // функция которая рисует прямоугольник
        // первый параметр - объект определяющий размеры прямоугольника
        // второй параметр - контекст канваса на котором будет произведено рисование 
        function drawRectangle(rect, context) {
            context.beginPath();
            context.rect(rect.x, rect.y, rect.width, rect.height);
            context.fillStyle = 'green';
            context.fill();
            context.lineWidth = rect.borderWidth;
            context.strokeStyle = 'black';
            context.stroke();
        }

        function animate(rect, canvas, context, startTime) {

            // определяем разницу между текущим временем и временем начала анимации.
            var time = (new Date()).getTime() - startTime;

            var linearSpeed = 100;

            // pixels / second
            var newX = linearSpeed * time / 1000;

            // меняем свойство x объекта прямоугольника до тех пор пока он не дойдет до правого края канваса.
            if (newX < canvas.width - rect.width - rect.borderWidth / 2) {
                rect.x = newX;
            }

            // очищаем канвас
            context.clearRect(0, 0, canvas.width, canvas.height);

            // рисуем прямоугольник с учетом измененной координаты x
            drawRectangle(rect, context);

            // запрашиваем новый фрейм
            requestFrame(function () {
                animate(rect, canvas, context, startTime);
            });
        }

        var canvas = document.getElementById('myCanvas');
        var context = canvas.getContext('2d');

        var rect = {
            x: 0,
            y: 75,
            width: 100,
            height: 50,
            borderWidth: 5
        };

        drawRectangle(rect, context);
        animate(rect, canvas, context, new Date().getTime());

    </script>
</body>
</html>
